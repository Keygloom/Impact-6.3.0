<cart-drawer {% if request.design_mode %}handle-section-events{% endif %} class="cart-drawer drawer drawer--lg" id="cart-drawer">
  {%- if cart.item_count == 0 -%}
    <button is="close-button" aria-label="{{ 'general.accessibility.close' | t | escape }}">
      {%- render 'icon' with 'close' -%}
    </button>

    <div class="empty-state align-self-center">
      <div class="empty-state__icon-wrapper">
        {%- render 'icon' with 'cart', width: 32, height: 32, stroke_width: 1 -%}
        <span class="count-bubble count-bubble--lg">0</span>
      </div>

      <div class="prose">
        <p class="h5">{{ 'cart.general.empty' | t }}</p>
        {%- assign button_content = 'cart.general.continue_shopping' | t -%}
        {%- render 'button', href: settings.cart_empty_button_link, size: 'xl', content: button_content -%}
      </div>
    </div>
  {%- else -%}
    <div class="cart-drawer__inner">
      <div class="cart-drawer__top">
        <div class="h-stack items-center justify-between">
          <div class="h-stack grow gap-2 sm:gap-2.5">
            <p class="h5">{{- 'cart.general.title' | t -}}</p>
            <cart-count class="count-bubble count-bubble--md">{{ cart.item_count }}</cart-count>
          </div>
          <button type="button" is="close-button" class="drawer__close-icon">
            <span class="sr-only">{{ 'general.accessibility.close' | t }}</span>
            {%- render 'icon' with 'close' -%}
          </button>
        </div>

        {%- if settings.cart_show_free_shipping_threshold -%}
          {%- render 'free-shipping-bar' -%}
        {%- endif -%}

        <div class="cart-timer" id="cart-timer-element" style="
          background: #000000;
          color: white;
          padding: 12px 0;
          margin: 8px -40px 16px -40px;
          text-align: center;
          border-radius: 0;
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
        ">
          <div style="
            font-size: 14px;
            font-weight: 600;
            line-height: 1.2;
          ">
            <div><strong>HIGH DEMAND | Your cart</strong></div>
            <div>is reserved for <span id="cart-timer-display" style="
              font-weight: 700;
              color: #ffffff;
            ">05:00</span></div>
          </div>
        </div>

        <script>
          (function() {
            if (window.cartTimerInitialized) return;
            window.cartTimerInitialized = true;

            function setTimerMarginsForMobile() {
              var timer = document.getElementById('cart-timer-element');
              if (timer && window.innerWidth <= 768) {
                timer.style.setProperty('margin-left', '-24px', 'important');
                timer.style.setProperty('margin-right', '-24px', 'important');
              }
            }
            setTimeout(setTimerMarginsForMobile, 50);

            setTimeout(function() {
              var display = document.getElementById('cart-timer-display');
              if (display) {
                var totalSeconds = 5 * 60 + 0;
                var currentSeconds = totalSeconds;
                function updateTimer() {
                  var minutes = Math.floor(currentSeconds / 60);
                  var seconds = currentSeconds % 60;
                  display.textContent = (minutes < 10 ? '0' : '') + minutes + ':' + (seconds < 10 ? '0' : '') + seconds;
                  if (currentSeconds <= 0) {
                    display.textContent = '00:00';
                    display.parentElement.parentElement.innerHTML =
                      '<div><strong>HIGH DEMAND | Your cart</strong></div><div>Reservation time expired</div>';
                    return;
                  }
                  currentSeconds--;
                  setTimeout(updateTimer, 1000);
                }
                updateTimer();
              }
            }, 100);
          })();
        </script>
      </div>

      <div class="v-stack gap-6 sm:gap-8">
        <div class="cart-drawer__line-items">
          {%- for line_item in cart.items -%}
            {%- render 'line-item', line_item: line_item, show_desktop_quantity: true -%}
          {%- endfor -%}
        </div>

        {%- if section.settings.products.count > 0 -%}
          <div class="cart-drawer__recommendations">
            <div class="v-stack gap-2.5 sm:gap-4">
              {%- capture carousel_id -%}cart-drawer-recommendations{%- endcapture -%}
              {%- liquid
                assign horizontal_products_blends = true
                assign product_card_background = section.settings.product_card_background | default: product.settings.product_card_background
                if product_card_background != 'rgba(0,0,0,0)' and product_card_background != blank and product_card_background != settings.dialog_background
                  assign horizontal_products_blends = false
                endif
                assign rendered_recommendations = 0
                capture recommendations
                  for recommended_product in section.settings.products
                    assign item_count_in_cart = cart | line_items_for: recommended_product
                    if item_count_in_cart.size == 0
                      render 'horizontal-product', product: recommended_product, show_add_to_cart: true, background: section.settings.product_card_background, text_color: section.settings.product_card_text_color
                      assign rendered_recommendations = rendered_recommendations | plus: 1
                    endif
                  endfor
                endcapture
              -%}
              {%- if rendered_recommendations > 0 -%}
                <div class="h-stack justify-between gap-4">
                  {%- if section.settings.recommendations_title != blank -%}
                    <p>{{ section.settings.recommendations_title | escape }}</p>
                  {%- endif -%}
                  {%- if rendered_recommendations > 1 -%}
                    <div class="h-stack gap-2 hidden sm:flex">
                      <button is="prev-button" class="circle-chevron hover:colors" aria-controls="{{ carousel_id }}" aria-label="{{ 'general.accessibility.previous' | t | escape }}" disabled>{%- render 'icon' with 'chevron-left-small', direction_aware: true -%}</button>
                      <button is="next-button" class="circle-chevron hover:colors" aria-controls="{{ carousel_id }}" aria-label="{{ 'general.accessibility.next' | t | escape }}">{%- render 'icon' with 'chevron-right-small', direction_aware: true -%}</button>
                    </div>
                  {%- endif -%}
                </div>
              {%- endif -%}
              {%- if recommendations != blank -%}
                <scroll-carousel selector=".horizontal-product" id="{{ carousel_id }}" class="horizontal-product-list-carousel {% unless horizontal_products_blends %}separate{% endunless %} scroll-area bleed">
                  <div class="horizontal-product-list {% if horizontal_products_blends %}divide-x{% else %}separate{% endif %}">
                    {{- recommendations -}}
                  </div>
                </scroll-carousel>
              {%- endif -%}
            </div>
          </div>
        {%- endif -%}
      </div>
    </div>

    <div class="v-stack gap-4 sm:gap-6" slot="footer">
      <div class="v-stack gap-1">
        {% for discount_application in cart.cart_level_discount_applications %}
          <div class="h-stack gap-4 justify-between">
            <div class="badge">
              {%- render 'icon' with 'discount' -%} {{- discount_application.title -}}
            </div>
            <span class="text-subdued">-{{ discount_application.total_allocated_amount | money_without_currency }}$</span>
          </div>
        {% endfor %}

        {%- assign total_savings = 0 -%}
        {%- assign total_compare_at_price = 0 -%}
        {%- for line_item in cart.items -%}
          {%- if line_item.variant.compare_at_price > line_item.variant.price -%}
            {%- assign item_savings = line_item.variant.compare_at_price | minus: line_item.variant.price | times: line_item.quantity -%}
            {%- assign total_savings = total_savings | plus: item_savings -%}
            {%- assign item_compare_total = line_item.variant.compare_at_price | times: line_item.quantity -%}
            {%- assign total_compare_at_price = total_compare_at_price | plus: item_compare_total -%}
          {%- endif -%}
        {%- endfor -%}

        {%- for discount_application in cart.cart_level_discount_applications -%}
          {%- assign total_savings = total_savings | plus: discount_application.total_allocated_amount -%}
        {%- endfor -%}

        <div class="h-stack gap-4 justify-between">
          <span class="h5">{{ 'cart.general.total' | t }}</span>
          <div class="cart-total-prices">
            <span class="h5">{{- cart.total_price | money_without_currency -}}$</span>
            {%- if total_compare_at_price > cart.total_price -%}
              <span class="cart-compare-price">
                {{ total_compare_at_price | money_without_currency }}$
              </span>
            {%- endif -%}
            {%- if total_savings > 0 -%}
              <span class="cart-savings-badge">
                SAVE {{ total_savings | money_without_currency }}$
              </span>
            {%- endif -%}
          </div>
        </div>
      </div>

      <form action="{{ routes.cart_url }}" method="POST" class="buy-buttons">
        {%- assign checkout_label = 'cart.general.checkout' | t -%}
        {%- render 'button', type: 'submit', content: checkout_label, icon: 'picto-lock', name: 'checkout', size: 'xl' -%}
        <div class="payment-icons-container" aria-label="Accepted payment methods">
          {%- for type in shop.enabled_payment_types -%}
            {{ type | payment_type_svg_tag }}
          {%- endfor -%}
        </div>
      </form>
    </div>
  {%- endif -%}
</cart-drawer>

<style>
  .cart-total-prices {
    display: flex;
    flex-wrap: wrap;
    align-items: baseline;
    gap: 8px;
  }
  .cart-compare-price {
    text-decoration: line-through;
    color: #6b7280;
    font-size: 14px;
  }
  .cart-savings-badge {
    background-color: #10b981;
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 600;
    white-space: nowrap;
  }
  @media (max-width: 768px) {
    .cart-total-prices {
      flex-wrap: nowrap;
      gap: 6px;
    }
    .cart-compare-price {
      font-size: 12px;
    }
    .cart-savings-badge {
      font-size: 11px;
      padding: 3px 6px;
    }
  }
  .payment-icons-container {
    display: flex;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
    gap: 12px;
    margin-top: 12px;
  }
  .payment-icons-container svg {
    width: 56px;
    height: auto;
    max-height: 50px;
  }
  @media (max-width: 768px) {
    .payment-icons-container {
      gap: 8px;
      margin-top: 10px;
    }
    .payment-icons-container svg {
      width: 44px;
      max-height: 38px;
    }
  }
</style>

{% schema %}
{
  "name": "Cart drawer",
  "settings": [
    {
      "type": "paragraph",
      "content": "Cart drawer won't appear to your customers if you have set the cart type to Page in the global theme settings."
    },
    {
      "type": "paragraph",
      "content": "Free shipping bar can be configured in global cart settings."
    },
    {
      "type": "checkbox",
      "id": "show_cart_note",
      "label": "Show cart note",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_shipping_text",
      "label": "Show shipping text",
      "default": true
    },
    {
      "type": "header",
      "content": "Product recommendations"
    },
    {
      "type": "text",
      "id": "recommendations_title",
      "label": "Heading",
      "default": "Trending this month"
    },
    {
      "type": "product_list",
      "id": "products",
      "label": "Recommendations",
      "limit": 10
    },
    {
      "type": "color",
      "id": "product_card_background",
      "label": "Product card background"
    },
    {
      "type": "color",
      "id": "product_card_text_color",
      "label": "Product card text"
    }
  ]
}
{% endschema %}